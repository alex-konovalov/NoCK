<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE Book SYSTEM "gapdoc.dtd"
[<!ENTITY NoCK "<Package>NoCK</Package>">] >

<Book Name="NoCK">

<TitlePage>
  <Title>NoCK</Title>
  <Subtitle>Computing obstruction for compact Clifford-Klein form</Subtitle>
  <Version>Version 1.0</Version>

<Author>
  Maciej Bocheński
  <Email>mabo@matman.uwm.edu.pl</Email>
<Address>
 Faculty of Mathematics and Computer Science,<Br/> University of Warmia and Mazury in Olsztyn<Br/>
 Sloneczna 54 Street, <Br/> 10-710 Olsztyn, Poland
       </Address> 
  </Author>
<Author>
  Piotr Jastrzębski
  <Email>piojas@matman.uwm.edu.pl</Email>
  <Homepage>http://wmii.uwm.edu.pl/~piojas/</Homepage>
<Address>
 Faculty of Mathematics and Computer Science,<Br/> University of Warmia and Mazury in Olsztyn<Br/>
 Sloneczna 54 Street, <Br/> 10-710 Olsztyn, Poland
       </Address> 
  </Author>
  <Author>
  Anna Szczepkowska
  <Email>anna.szczepkowska@matman.uwm.edu.pl</Email>
<Address>
 Faculty of Mathematics and Computer Science,<Br/> University of Warmia and Mazury in Olsztyn<Br/>
 Sloneczna 54 Street, <Br/> 10-710 Olsztyn, Poland
       </Address> 
  </Author>
  <Author>
  Aleksy Tralle
  <Email>tralle@matman.uwm.edu.pl</Email>
  <Homepage>http://wmii.uwm.edu.pl/~tralle/</Homepage>
<Address>
 Faculty of Mathematics and Computer Science,<Br/> University of Warmia and Mazury in Olsztyn<Br/>
 Sloneczna 54 Street, <Br/> 10-710 Olsztyn, Poland
       </Address> 
  </Author>
  <Author>
  Artur Woike
  <Email>awoike@matman.uwm.edu.pl</Email>
  <Homepage>http://wmii.uwm.edu.pl/~awoike/</Homepage>
<Address>
 Faculty of Mathematics and Computer Science,<Br/> University of Warmia and Mazury in Olsztyn<Br/>
 Sloneczna 54 Street, <Br/> 10-710 Olsztyn, Poland
       </Address> 
  </Author>

  <Date>April 2018
</Date>

<Abstract>
In this package we develop functions for algorithms of finding homogeneous spaces of semisimple non-compact Lie groups which do not admit compact Clifford-Klein forms. 
</Abstract>

<Acknowledgements>
We thank Willem de Graaf for his help in getting some literature sources.
</Acknowledgements>

<Copyright>
NoCK Package is free software;  you can redistribute it and/or modify it under the terms of the 
    <URL Text="GNU General Public License">http://www.fsf.org/licenses/gpl.html</URL> 
    as published by the Free Software Foundation; either version 2 of the License, 
    or (at your option) any later version.
</Copyright>
  

</TitlePage>

<TableOfContents/>

<Body>


<Chapter> <Heading>Notation</Heading>

Notation for real Lie algebra is from CoReLG Package, <Cite Key="CoReLG" />.

Notice: we found some misspellings:
<List>
 <Item>"D",4,5 is <M>\mathfrak{so}(1,7)</M></Item>
 <Item>"D",4,4 is <M>\mathfrak{so}(3,5)</M></Item>
 <Item>"E",7,3 is <M>\mathfrak{e}_{7(-25)}=EVII</M></Item>
 <Item>"E",7,4 is <M>\mathfrak{e}_{7(-5)}=EVI</M></Item>
</List>
To be sure, check the rank or the dimension and check the result with the table in <Cite Key="onvin" />.

<Example>
gap> G:=RealFormById( "E", 7,3);
&lt;Lie algebra of dimension 133 over SqrtField>
gap> rankG:=Dimension(CartanSubalgebra(G));
7
gap> rankRG:=Dimension(CartanSubspace(G));
3
gap> dimG:=Dimension(G);
133
gap> P:=CartanDecomposition( G ).P;
&lt;vector space over SqrtField, with 54 generators>
gap> dimPforG:=Dimension(P);
54
gap> K:=CartanDecomposition( G ).K;
&lt;Lie algebra of dimension 79 over SqrtField>
gap> rankK:= Dimension(CartanSubalgebra(K));
7
gap> dimK:= Dimension(K);
79
</Example>


</Chapter>

<Chapter> <Heading>Obstruction for compact Clifford-Klein form</Heading>

In this chapter we describe functions for algorithms from <Cite Key="our"/>.
<Section> <Heading>Technical functions</Heading>
<ManSection>
<Func Name="NonCompactDimension"  Arg="G"
      Comm="real forms"/>
<Description>
For a real Lie algebra <M>G</M> constructed by the function <A>RealFormById</A> (from <Cite Key="CoReLG"/>), this function returns the non-compact dimension of <M>G</M>.

<Example>
gap> G:=RealFormById("E",6,2); # E6(6)
&lt;Lie algebra of dimension 78 over SqrtField>
gap> dG:=NonCompactDimension(G);
42
</Example>
</Description>
</ManSection><ManSection>
<Func Name="PCoefficients"  Arg="type, rank"/>
<Description>
Let <M>G</M> be the compact connected Lie group of the type <A>type</A> and the rank <A>rank</A>.  Let
<M>\Lambda\,P_{G}=\Lambda (y_1,...,y_l)</M>
be the exterior algebras over the spaces <M>P_G</M> of the primitive elements in <M>H^*(G)</M>. Denote the degrees as follows
<M>|y_j|=2p_j-1,j=1,...,l</M>. This function returns coefficients <M>p_1,\ldots,p_l, j=1,...,l</M>.
<Example>
gap> PCoefficients("D",5);
[ 2, 4, 6, 8, 5 ]
</Example>
</Description>
</ManSection><ManSection>
<Func Name="PCalculate"  Arg="pi, qi"/>
<Description>
Here <M>pi=\{ p_1,\ldots,p_l\}</M> and <M>qi=\{ q_1,\ldots,q_m\}</M> are sets of coefficients (<M>l\geq m</M>). This function 
returns the polynomial: 
<M>P(t)=\prod_{j=m+1}^l(1+t^{2p_j-1})\prod_{i=1}^m(1-t^{2p_i})/(1-t^{2q_i})</M>.
<Example>
gap> PCalculate([4,2,3],[2,2]);   
t^9+t^5+t^4+1
</Example>
</Description>
</ManSection><ManSection>
<Func Name="AllZeroDH"  Arg="type, rank, id"/>
<Description>
Let <M>G^C</M> be the complex Lie algebra of the type <A>type</A> and the rank <A>rank</A>. Let <M>G</M> be the real form of <M>G^C</M>
 with the index <A>id</A> (see <A>RealFormsInformation</A>,<Cite Key="CoReLG"/>). This function returns the set of degrees of <M>P(t)</M>
 that have zero coefficients over all permutation (see Section 7 in <Cite Key="our"/>).
<Example>
gap> AllZeroDH("F",4,2); 
[ 1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15, 17, 18, 19, 21, 22, 23, 25, 26, 27 ]
</Example>
</Description>
</ManSection>
</Section>
</Chapter>

</Body>

<Bibliography Databases="NoCKbib.xml" />

<TheIndex/>


</Book>
